[tool.poetry]
name = "iscc-sct"
version = "0.1.2"
description = "ISCC - Semantic Code Text"
authors = ["Titusz <tp@py7.de>"]
license = "CC-BY-NC-SA-4.0"
readme = "README.md"
homepage = "https://iscc.codes"
repository = "https://github.com/iscc/iscc-sct"
documentation = "https://github.com/iscc/iscc-sct"
keywords=["iscc", "text similarity", "cross lingual", "semantic similarity"]
classifiers=[
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Text Processing",
    "Topic :: Text Processing :: General",
    "Topic :: Text Processing :: Indexing",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Archiving",
    "Topic :: System :: Clustering",
    "Topic :: System :: Distributed Computing",
]

[tool.poetry.urls]
"Changelog" = "https://github.com/iscc/iscc-sct/blob/main/CHANGELOG.md"
"Bug Tracker" = "https://github.com/iscc/iscc-sct/issues"
"Twitter" = "https://twitter.com/iscc_foundation"
"Donate" = "https://iscc.foundation/support"

[tool.poetry.scripts]
sct = 'iscc_sct.cli:main'

[tool.poetry.dependencies]
python = ">=3.9,<3.13"
semantic-text-splitter = "*"
onnxruntime = "*"
onnxruntime-gpu = { version = "*", optional = true }
loguru = "*"
blake3 = "*"
platformdirs = "*"
tokenizers = "*"
pydantic-settings = "*"
charset-normalizer = "*"
numpy = "<2.0.0"
pybase64 = "*"
certifi = ">=2024.07.04"
gradio = { version = "*", optional = true }
pyyaml = "*"
pydantic = "*"


[tool.poetry.extras]
gpu = ["onnxruntime-gpu"]
demo = ["gradio"]

[tool.poetry.group.test.dependencies]
pytest = "*"
coverage = "*"
pytest-cov = "*"

[tool.poetry.group.dev.dependencies]
poethepoet = "*"
ruff = "*"
mdformat-gfm = "*"
mdformat-gfm-alerts = "*"
mdformat-frontmatter = "*"

[tool.ruff]
line-length = 100

[tool.ruff.format]
line-ending = "lf"

[tool.coverage.run]
omit = ["iscc_sct/dev.py", "tests/", "iscc_sct/demo.py"]

[tool.poe.tasks]
format-code = { cmd = "ruff format", help = "Code style formating with ruff" }
format-markdown = { cmd = "mdformat --wrap 100 --end-of-line lf README.md", help = "Markdown formating with mdformat" }
format-yml = { script = "iscc_sct.dev:format_yml", help = "Format YML files"}
convert-lf = { script = "iscc_sct.dev:convert_lf", help = "Convert line endings to LF"}
test = { cmd = "pytest --cov=iscc_sct --cov-fail-under=100", help = "Run tests with coverage" }
update-dependencies = { cmd = "poetry update", help = "Update dependencies" }
all = ["format-code", "format-markdown", "format-yml", "convert-lf", "test"]
update = ["update-dependencies", "all"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
